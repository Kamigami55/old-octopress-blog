<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Project | Eason's blog]]></title>
  <link href="https://easonchang.com/blog/categories/project/atom.xml" rel="self"/>
  <link href="https://easonchang.com/"/>
  <updated>2016-09-19T01:03:14+08:00</updated>
  <id>https://easonchang.com/</id>
  <author>
    <name><![CDATA[Eason Chang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[【DailyUI #003】Landing Page]]></title>
    <link href="https://easonchang.com/2016/05/10/dailyui-003-landing-page/"/>
    <updated>2016-05-10T19:43:00+08:00</updated>
    <id>https://easonchang.com/2016/05/10/dailyui-003-landing-page</id>
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/5nDhx57.jpg" alt="極限圈landing-page.jpg" /></p>

<p><a href="https://imgur.com/SXfzDlx">HD圖檔</a></p>

<p>這是今天DailyUI的成果，極限圈的Landing Page。</p>

<p>我實在不希望太晚睡搞壞身體（現在是凌晨3點QAQ），所以就不實作成網頁了，今天只有圖檔:)。</p>

<!-- more -->


<p>這次我使用Keynote作為拼圖軟體（非常坑爹，可是沒錢買PS和AI啊，之後應該會去找開源的替代方案）</p>

<p>背景圖片來源：<a href="librestock.com">Librestock</a>（超推）</p>

<p>向量圖片來源：<a href="freepik.com">Freepik</a>（也是超推）</p>

<p>在山峰上放字的靈感來源是這支影片(3:28處)：<a href="https://www.youtube.com/watch?v=1Huz2P7tdYk">https://www.youtube.com/watch?v=1Huz2P7tdYk</a>
可見平常多看一些有的沒的也是有派上用場的一天:)
單頁式網頁的設計細節則是參考<a href="https://www.pinterest.com/search/pins/?q=landing%20page&amp;rs=typed&amp;0=landing%7Ctyped&amp;1=page%7Ctyped">Pinterest</a>（推上天啦）</p>

<p>要學得真的還很多，我想學習如何畫草稿、產出向量圖和背景圖、用拖拉的方式規劃頁面、並妥善轉換成code&hellip;&hellip;。
前方的道路還很長呀</p>

<p>以上，這是今天的DailyUI #003 Landing Page!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【DailyUI #002】Credit Card Checkout]]></title>
    <link href="https://easonchang.com/2016/05/09/dailyui-002-credit-card-checkout/"/>
    <updated>2016-05-09T21:03:00+08:00</updated>
    <id>https://easonchang.com/2016/05/09/dailyui-002-credit-card-checkout</id>
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/hEbjURo.jpg" alt="dailyui_002_credit.png" /></p>

<p><a href="http://kamigami55.github.io/DailyUI/002_creditCardCheckout/">點我試試Live Demo</a></p>

<p><a href="https://github.com/Kamigami55/DailyUI/tree/master/002_creditCardCheckout">點我看看Github原始碼(可是完全沒有整理超級亂我覺得你還是不要看好了)</a></p>

<p>It&rsquo;s DailyUI day #2!</p>

<p>做一做就上癮了，所以當然要趁勝追擊繼續創造很厲害很厲害的UI！</p>

<p>我發現CSS還有很多特性是我還不了解的、pseudo-element(偽元素)、animetion、@keyframes、transform、&hellip;&hellip;
我對於前端設計的掌握度還是非常低，無法隨心所欲地作出想要的效果，不過在挑戰DailyUI的過程中，確實可以明顯感覺到自己正在進步，希望完成這100天的挑戰後，自己能成為一位上的了檯面的前端工程師！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【DailyUI #001】Sign Up]]></title>
    <link href="https://easonchang.com/2016/05/09/dailyui-001-sign-up/"/>
    <updated>2016-05-09T07:28:00+08:00</updated>
    <id>https://easonchang.com/2016/05/09/dailyui-001-sign-up</id>
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/rWNKTqv.jpg" alt="Daily-UI-001.png" /></p>

<h1>我今天做了什麼</h1>

<p>新專案啟動！這是DailyUI！</p>

<p>今天的題目是<strong>&ldquo;Sign Up&rdquo;</strong>，設計一個註冊介面。</p>

<p>而我希望「註冊」這個行為可以脫離「填表單」這個框架。註冊也可以像是一位導遊，引領遊客們進入你精心設計的網站中探索，因此這個過程應該是以「對話、引導」的方式呈現，於是乎我就借用了通訊軟體的設計，將註冊表單包裹在與導遊的對話之中。</p>

<!-- more -->


<p><a href="http://kamigami55.github.io/DailyUI/001_signup/">點我玩線上Demo</a></p>

<p><a href="https://github.com/Kamigami55/DailyUI/tree/master/001_signup">點我查看Github原始碼</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【DailyUI #000】成為最強前端設計師吧]]></title>
    <link href="https://easonchang.com/2016/05/08/dailyui-000-become-awesome-front-end-designer/"/>
    <updated>2016-05-08T14:50:00+08:00</updated>
    <id>https://easonchang.com/2016/05/08/dailyui-000-become-awesome-front-end-designer</id>
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/yMgo3z4.jpg" alt="DailyUI.png" /></p>

<h1>什麼是 DailyUI</h1>

<p>在網上衝浪的時候，不小心又看到了一個驚人的網站：DailyUI.co
這是一個協助你成為更專業的 UI Designer 的服務，透過激勵你連續 100 天進行 UI 設計，他的運作方式是這樣的：</p>

<ul>
<li>每天都會寄一封 email 給你，告訴你今天的 UI 設計題目（假日沒有，假日是用來遊山玩水的）</li>
<li>題目只會指出大方向，沒有太多限制，發揮創意打造出最強 UI！It&rsquo;s show time!</li>
<li>將你的設計發上 Twitter 或是 Dribble，向全世界分享你的創意！</li>
<li>偶爾會有驚喜獎勵，不要被嚇到了:)</li>
</ul>


<!-- more -->


<p>這種互動模式實在是太驚人了！而且我也想知道有什麼驚喜獎勵～</p>

<p>於是乎「<strong>Challenge Accepted!!</strong>」</p>

<h1>我的挑戰紀錄</h1>

<p><a href="https://easonchang.com/2016/05/09/dailyui-001-sign-up/">【DailyUI #001】Sign Up</a></p>

<p><a href="https://easonchang.com/2016/05/09/dailyui-002-credit-card-checkout/">【DailyUI #002】Credit Card Checkout</a></p>

<p><a href="https://easonchang.com/2016/05/10/dailyui-003-landing-page/">【DailyUI #003】Landing Page</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【100sites #011】LifeGame，生命遊戲模擬無限的可能性]]></title>
    <link href="https://easonchang.com/2016/03/28/100sites-011-lifegame/"/>
    <updated>2016-03-28T03:54:00+08:00</updated>
    <id>https://easonchang.com/2016/03/28/100sites-011-lifegame</id>
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/pZmuBeF.jpg" alt="螢幕快照 2016-03-27 上午12.35.39.png" /></p>

<h1>LifeGame，生命遊戲模擬無限的可能性</h1>

<p><a href="http://kamigami55.github.io/100sites/011_LifeGame/">點我玩生命遊戲線上demo</a></p>

<p><a href="https://github.com/Kamigami55/100sites/tree/gh-pages/011_LifeGame">點我查看Github原始碼</a></p>

<ul>
<li>ENTER：暫停</li>
<li>滑鼠左鍵：放置或刪除細胞</li>
</ul>


<h2>什麼是生命遊戲？</h2>

<p><a href="https://zh.wikipedia.org/wiki/%E5%BA%B7%E5%A8%81%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F">生命遊戲</a>，是由英國數學家<a href="https://zh.wikipedia.org/wiki/%E7%B4%84%E7%BF%B0%C2%B7%E4%BD%95%E9%A0%93%C2%B7%E5%BA%B7%E5%A8%81">John Horton Conway</a>研發的一套<a href="https://zh.wikipedia.org/wiki/%E7%B4%B0%E8%83%9E%E8%87%AA%E5%8B%95%E6%A9%9F">細胞自動機</a>模型，地圖中每個細胞會根據周圍8格細胞的狀態來決定自身的存亡，詳細規則如下：（摘錄自<a href="https://zh.wikipedia.org/wiki/%E5%BA%B7%E5%A8%81%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F">維基百科</a>）</p>

<!-- more -->


<ol>
<li>當前細胞為存活狀態時，當周圍低於 2 個（不包含 2 個）存活細胞時，該細胞變成死亡狀態。（模擬生命數量稀少）</li>
<li>當前細胞為存活狀態時，當周圍有 2 個或 3 個存活細胞時，該細胞保持原樣。</li>
<li>當前細胞為存活狀態時，當周圍有 3 個以上（不包含 3 個）的存活細胞時，該細胞變成死亡狀態。（模擬生命數量過多）</li>
<li>當前細胞為死亡狀態時，當周圍有 3 個存活細胞時，該細胞變成存活狀態。 （模擬繁殖）</li>
</ol>


<p>僅僅這4條規則，就可以建構出一個複雜而美妙的生物遊戲世界。我們可以找到一些特殊形狀的生物單位，他們會表現出一些有趣的行為模式。</p>

<p>三種經典的特殊生物單位：
<img src="https://i.imgur.com/tCVC0LI.jpg" alt="螢幕快照 2016-03-28 上午11.36.59.png" />
- 左邊的Blinker(信號燈)會以特定週期變化
- 中間的Spaceship(太空船)會往右下角移動（你也可以設計出往其他方向移動的船)
- 右邊的Beehive(蜂窩)則會保持靜止</p>

<h2>今天的LifeGame</h2>

<p>而在今天的LifeGame裡頭，我已經為你在左上角放置一個Blinker了，剩下的空間，就交給你來創造無限的可能性了！</p>

<p>今天的程式碼：
<figure class='code'><figcaption><span>index.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="ni">&amp;lt;</span>!DOCTYPE html&gt;
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;meta</span> <span class="na">charset-</span><span class="err">&quot;</span><span class="na">UTF-8</span><span class="err">&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>LifeGame<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="na">href=</span><span class="s">&quot;style.css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;http://cdnjs.cloudflare.com/ajax/libs/p5.js/0.4.23/p5.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.4.23/addons/p5.dom.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;lifegame.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;body&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<pre><code class="css style.css">* {
  margin: 0;
  padding: 0;
}

body {
  overflow: hidden;
}
</code></pre>

<pre><code class="javascript lifegame.js">var SIZE = 20;
var oldMap = [],
    newMap = [],
    num_x = 0,
    num_y = 0,
    paused = false,
    frameCount = 0;
var pauseButton;



function setup() {
  createCanvas(windowWidth, windowHeight);
  frameRate(30);

  // init map
  num_x = windowWidth / SIZE;
  num_y = windowHeight / SIZE;
  for (var i = 0; i &lt; num_x; ++i) {
    oldMap.push([]);
    newMap.push([]);
    for (var j = 0; j &lt; num_y; ++j) {
      oldMap[i].push(false);
      newMap[i].push(false);
    }
  }
  loadDefaultMap();

  // init pause button
  pauseButton = createButton('Pause');
  pauseButton.size(80, 30);
  pauseButton.position(windowWidth/2-40, windowHeight-40);
  pauseButton.mousePressed(togglePauseSimulate);
}


function draw() {
  // fresh map every 5 frames
  if (!paused) {
    if (frameCount%5 == 0) {
      freshMap();
    }
  }
  // increase frame count
  ++frameCount;
  if (frameCount &gt;= 30) {
    frameCount = 0;
  }

  drawMap();
}


// default map: a blink unit at top left corner
function loadDefaultMap() {
  oldMap[1][1] = true;
  oldMap[1][2] = true;
  oldMap[1][3] = true;
}


function drawMap() {
  background(0);
  // draw grid
  stroke(30);
  for (var i = 0; i &lt; num_x; ++i) {
    line(i*SIZE, 0, i*SIZE, windowHeight);
  }
  for (var i = 0; i &lt; num_y; ++i) {
    line(0, i*SIZE, windowWidth, i*SIZE);
  }
  fill(255);
  // draw cells
  for (var i = 0; i &lt; num_x; ++i) {
    for (var j = 0; j &lt; num_y; ++j) {
      if (oldMap[i][j]) {
        rect(i*SIZE, j*SIZE, SIZE, SIZE);
      }
    }
  }
  // draw mouse cell
  fill(color('rgba(100,100,100,0.5)'));
  var mouseCellX = int(mouseX / SIZE);
  var mouseCellY = int(mouseY / SIZE);
  rect(mouseCellX*SIZE, mouseCellY*SIZE, SIZE, SIZE);
}


// press ENTER to pause simulate
function keyPressed() {
  if (keyCode == ENTER) {
    togglePauseSimulate();
  }
}


// press mouse to add or remove cell
function mousePressed() {
  var mouseCellX = int(mouseX / SIZE);
  var mouseCellY = int(mouseY / SIZE);
  oldMap[mouseCellX][mouseCellY] = !oldMap[mouseCellX][mouseCellY]
}


function togglePauseSimulate() {
  if (paused) {
    paused = false;
  } else {
    paused = true;
  }
}



// count how many neighbors there are of a cell
function neighbors(xpos, ypos) {
  var total = 0;
  // four corners
  if (xpos != 0 &amp;&amp; ypos != 0) {
    if (oldMap[xpos-1][ypos-1]) {
      ++total;
    }
  }
  if (xpos != 0 &amp;&amp; ypos != num_y-1) {
    if (oldMap[xpos-1][ypos+1]) {
      ++total;
    }
  }
  if (xpos != num_x-1 &amp;&amp; ypos != 0) {
    if (oldMap[xpos+1][ypos-1]) {
      ++total;
    }
  }
  if (xpos != num_x-1 &amp;&amp; ypos != num_y-1) {
    if (oldMap[xpos+1][ypos+1]) {
      ++total;
    }
  }
  // left and right
  if (xpos != 0) {
    if (oldMap[xpos-1][ypos]) {
      ++total;
    }
  }
  if (xpos != num_x-1) {
    if (oldMap[xpos+1][ypos]) {
      ++total;
    }
  }
  if (ypos != 0) {
    if (oldMap[xpos][ypos-1]) {
      ++total;
    }
  }
  if (ypos != num_y-1) {
    if (oldMap[xpos][ypos+1]) {
      ++total;
    }
  }
  return total;
}


// calculate the next map according to the Life Game rule
function freshMap() {
  for (var i = 0; i &lt; num_x; ++i) {
    for (var j = 0; j &lt; num_y; ++j) {
      var neighbor_count = neighbors(i, j);
      if (neighbor_count &lt;= 1 || neighbor_count &gt;= 4) {
        newMap[i][j] = false;
      } else if (neighbor_count === 2) {
        newMap[i][j] = oldMap[i][j];
      } else { // neighbor_count === 3
        newMap[i][j] = true;
      }
    }
  }

  for (var i = 0; i &lt; num_x; ++i) {
    for (var j = 0; j &lt; num_y; ++j) {
      oldMap[i][j] = newMap[i][j];
    }
  }
}
</code></pre>
]]></content>
  </entry>
  
</feed>
